<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 6.0.2 (Python 3.11.5 on win32)" generated="20230913 12:53:25.706" rpa="false" schemaversion="3">
<suite id="s1" name="Test Suite" source="C:\Users\Timofey\Documents\Projects\gcc_make\Sources\renode_test\renode_test\test.robot">
<kw name="Setup" library="renode-keywords" type="SETUP">
<msg timestamp="20230913 12:53:23.807" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<var>${SYSTEM}</var>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20230913 12:53:23.807" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Return: 'Windows'</msg>
<msg timestamp="20230913 12:53:23.824" level="INFO">${SYSTEM} = Windows</msg>
<status status="PASS" starttime="20230913 12:53:23.807" endtime="20230913 12:53:23.824"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${CONFIGURATION}</var>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20230913 12:53:23.824" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{PARAMS}</var>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Arguments: [ '--robot-server-port' | '49152' | '--hide-log' ]</msg>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Return: ['--robot-server-port', '49152', '--hide-log']</msg>
<msg timestamp="20230913 12:53:23.824" level="INFO">@{PARAMS} = [ --robot-server-port | 49152 | --hide-log ]</msg>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<if>
<branch type="IF" condition="${DISABLE_XWT}">
<kw name="Insert Into List" library="Collections">
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
<doc>Inserts ``value`` into ``list`` to the position specified with ``index``.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="File Should Exist" library="OperatingSystem">
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows' and not ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'">
<kw name="Start Process" library="Process">
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>dotnet ${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows' and not ${NET_PLATFORM}">
<kw name="Start Process" library="Process">
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<doc>Starts a new process on background.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'">
<kw name="Fatal Error" library="BuiltIn">
<arg>Windows doesn't support server remote debug option.</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="not '${SYSTEM}' == 'Windows'">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.824"/>
</if>
<if>
<branch type="IF" condition="'${SYSTEM}' == 'Windows'">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230913 12:53:23.824" level="TRACE">Arguments: [ 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20230913 12:53:23.991" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.991"/>
</kw>
<msg timestamp="20230913 12:53:23.991" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.991"/>
</kw>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.991"/>
</branch>
<status status="PASS" starttime="20230913 12:53:23.824" endtime="20230913 12:53:23.991"/>
</if>
<kw name="Set Default Uart Timeout" library="Remote">
<arg>${DEFAULT_UART_TIMEOUT}</arg>
<msg timestamp="20230913 12:53:23.991" level="TRACE">Arguments: [ '8' ]</msg>
<msg timestamp="20230913 12:53:24.007" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:23.991" endtime="20230913 12:53:24.007"/>
</kw>
<if>
<branch type="IF" condition="${SAVE_LOGS}">
<kw name="Enable Logging To Cache" library="Remote">
<msg timestamp="20230913 12:53:24.007" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:24.013" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:24.007" endtime="20230913 12:53:24.013"/>
</kw>
<status status="PASS" starttime="20230913 12:53:24.007" endtime="20230913 12:53:24.013"/>
</branch>
<status status="PASS" starttime="20230913 12:53:24.007" endtime="20230913 12:53:24.013"/>
</if>
<kw name="Set Variable" library="BuiltIn">
<var>${allowed_chars}</var>
<arg>abcdefghijklmnopqrstuvwxyz01234567890_-</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20230913 12:53:24.013" level="TRACE">Arguments: [ 'abcdefghijklmnopqrstuvwxyz01234567890_-' ]</msg>
<msg timestamp="20230913 12:53:24.013" level="TRACE">Return: 'abcdefghijklmnopqrstuvwxyz01234567890_-'</msg>
<msg timestamp="20230913 12:53:24.013" level="INFO">${allowed_chars} = abcdefghijklmnopqrstuvwxyz01234567890_-</msg>
<status status="PASS" starttime="20230913 12:53:24.013" endtime="20230913 12:53:24.013"/>
</kw>
<kw name="Convert To Lower Case" library="String">
<var>${metrics_fname}</var>
<arg>${SUITE_NAME}</arg>
<doc>Converts string to lower case.</doc>
<msg timestamp="20230913 12:53:24.013" level="TRACE">Arguments: [ 'test' ]</msg>
<msg timestamp="20230913 12:53:24.013" level="TRACE">Return: 'test'</msg>
<msg timestamp="20230913 12:53:24.013" level="INFO">${metrics_fname} = test</msg>
<status status="PASS" starttime="20230913 12:53:24.013" endtime="20230913 12:53:24.013"/>
</kw>
<kw name="Replace String" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230913 12:53:24.014" level="TRACE">Arguments: [ 'test' | ' ' | '_' ]</msg>
<msg timestamp="20230913 12:53:24.014" level="TRACE">Return: 'test'</msg>
<msg timestamp="20230913 12:53:24.014" level="INFO">${metrics_fname} = test</msg>
<status status="PASS" starttime="20230913 12:53:24.014" endtime="20230913 12:53:24.014"/>
</kw>
<kw name="Replace String Using Regexp" library="String">
<var>${metrics_fname}</var>
<arg>${metrics_fname}</arg>
<arg>[^${allowed_chars}]+</arg>
<arg>${EMPTY}</arg>
<doc>Replaces ``pattern`` in the given ``string`` with ``replace_with``.</doc>
<msg timestamp="20230913 12:53:24.014" level="TRACE">Arguments: [ 'test' | '[^abcdefghijklmnopqrstuvwxyz01234567890_-]+' | '' ]</msg>
<msg timestamp="20230913 12:53:24.014" level="TRACE">Return: 'test'</msg>
<msg timestamp="20230913 12:53:24.014" level="INFO">${metrics_fname} = test</msg>
<status status="PASS" starttime="20230913 12:53:24.014" endtime="20230913 12:53:24.014"/>
</kw>
<kw name="Join Path" library="OperatingSystem">
<var>${metrics_path}</var>
<arg>${RESULTS_DIRECTORY}</arg>
<arg>profiler-${metrics_fname}</arg>
<doc>Joins the given path part(s) to the given base path.</doc>
<msg timestamp="20230913 12:53:24.014" level="TRACE">Arguments: [ 'C:\\Users\\Timofey\\Documents\\Projects\\gcc_make\\Sources\\renode_test\\renode_test' | 'profiler-test' ]</msg>
<msg timestamp="20230913 12:53:24.015" level="TRACE">Return: 'C:\\Users\\Timofey\\Documents\\Projects\\gcc_make\\Sources\\renode_test\\renode_test\\profiler-test'</msg>
<msg timestamp="20230913 12:53:24.015" level="INFO">${metrics_path} = C:\Users\Timofey\Documents\Projects\gcc_make\Sources\renode_test\renode_test\profiler-test</msg>
<status status="PASS" starttime="20230913 12:53:24.014" endtime="20230913 12:53:24.015"/>
</kw>
<if>
<branch type="IF" condition="${CREATE_EXECUTION_METRICS}">
<kw name="Execute Command" library="Remote">
<arg>EnableProfilerGlobally "${metrics_path}"</arg>
<status status="NOT RUN" starttime="20230913 12:53:24.015" endtime="20230913 12:53:24.015"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:24.015" endtime="20230913 12:53:24.015"/>
</branch>
<status status="PASS" starttime="20230913 12:53:24.015" endtime="20230913 12:53:24.015"/>
</if>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20230913 12:53:24.015" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:24.026" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:24.015" endtime="20230913 12:53:24.026"/>
</kw>
<msg timestamp="20230913 12:53:24.026" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:23.807" endtime="20230913 12:53:24.026"/>
</kw>
<test id="s1-t1" name="Test UART" line="25">
<kw name="Reset Emulation" library="Remote" type="SETUP">
<msg timestamp="20230913 12:53:24.026" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:24.028" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:24.026" endtime="20230913 12:53:24.028"/>
</kw>
<kw name="Create Machine">
<arg>${TEST_REPL}</arg>
<arg>@C:/Users/Timofey/Documents/Projects/gcc_make/Sources/renode_test/renode_test/build/bin/MyApp.elf</arg>
<msg timestamp="20230913 12:53:24.028" level="TRACE">Arguments: [ ${platform}='"""\r\nusing "platforms/cpus/stm32f4.repl"\r\n"""' | ${elf}='@C:/Users/Timofey/Documents/Projects/gcc_make/Sources/renode_test/renode_test/build/bin/MyApp.elf' ]</msg>
<kw name="Execute Command" library="Remote">
<arg>mach create</arg>
<msg timestamp="20230913 12:53:24.029" level="TRACE">Arguments: [ 'mach create' ]</msg>
<msg timestamp="20230913 12:53:24.056" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:24.029" endtime="20230913 12:53:24.056"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>machine LoadPlatformDescriptionFromString ${platform}</arg>
<msg timestamp="20230913 12:53:24.056" level="TRACE">Arguments: [ 'machine LoadPlatformDescriptionFromString """\r\nusing "platforms/cpus/stm32f4.repl"\r\n"""' ]</msg>
<msg timestamp="20230913 12:53:25.414" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:24.056" endtime="20230913 12:53:25.414"/>
</kw>
<kw name="Execute Command" library="Remote">
<arg>sysbus LoadELF ${elf}</arg>
<msg timestamp="20230913 12:53:25.414" level="TRACE">Arguments: [ 'sysbus LoadELF @C:/Users/Timofey/Documents/Projects/gcc_make/Sources/renode_test/renode_test/build/bin/MyApp.elf' ]</msg>
<msg timestamp="20230913 12:53:25.477" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:25.414" endtime="20230913 12:53:25.477"/>
</kw>
<msg timestamp="20230913 12:53:25.477" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:24.028" endtime="20230913 12:53:25.477"/>
</kw>
<kw name="Create Terminal Tester" library="Remote">
<arg>${UART}</arg>
<msg timestamp="20230913 12:53:25.477" level="TRACE">Arguments: [ 'sysbus.usart1' ]</msg>
<msg timestamp="20230913 12:53:25.492" level="TRACE">Return: 0</msg>
<status status="PASS" starttime="20230913 12:53:25.477" endtime="20230913 12:53:25.492"/>
</kw>
<kw name="Start Emulation" library="Remote">
<msg timestamp="20230913 12:53:25.492" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:25.492" endtime="20230913 12:53:25.618"/>
</kw>
<kw name="Wait For Line On Uart" library="Remote">
<arg>test</arg>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [ 'test' ]</msg>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Return: {'groups': [], 'line': 'test', 'timestamp': 0.0}</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [  ]</msg>
<kw name="Stop Profiler" library="renode-keywords">
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [  ]</msg>
<if>
<branch type="IF" condition="${PROFILER_PROCESS}">
<kw name="Terminate Process" library="Process">
<arg>${PROFILER_PROCESS}</arg>
<doc>Stops the process gracefully or forcefully.</doc>
<status status="NOT RUN" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${PROFILER_PROCESS}</arg>
<arg>None</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</if>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<if>
<branch type="IF" condition="${CREATE_SNAPSHOT_ON_FAIL}">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Create Snapshot Of Failed Test</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</if>
<if>
<branch type="IF" condition="${SAVE_LOGS}">
<if>
<branch type="IF" condition="&quot;${SAVE_LOGS_WHEN}&quot; == &quot;Always&quot;">
<kw name="Save Test Log" library="renode-keywords">
<status status="NOT RUN" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</branch>
<branch type="ELSE IF" condition="&quot;${SAVE_LOGS_WHEN}&quot; == &quot;Fail&quot;">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Save Test Log</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [ 'Save Test Log' ]</msg>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</kw>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</if>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.618"/>
</if>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<var>${res}</var>
<arg>Import Library</arg>
<arg>Dialogs</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<arg>Dialogs</arg>
<doc>Imports a library with the given name and optional arguments.</doc>
<msg timestamp="20230913 12:53:25.618" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20230913 12:53:25.634" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.634"/>
</kw>
<msg timestamp="20230913 12:53:25.634" level="TRACE">Return: ('PASS', None)</msg>
<msg timestamp="20230913 12:53:25.634" level="INFO">${res} = ('PASS', None)</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.634"/>
</kw>
<if>
<branch type="IF" condition="${HOLD_ON_ERROR}">
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<status status="NOT RUN" starttime="20230913 12:53:25.634" endtime="20230913 12:53:25.634"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:25.634" endtime="20230913 12:53:25.634"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.634" endtime="20230913 12:53:25.634"/>
</if>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20230913 12:53:25.634" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:25.650" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:25.634" endtime="20230913 12:53:25.650"/>
</kw>
<kw name="Clear Cached Log" library="Remote">
<msg timestamp="20230913 12:53:25.650" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20230913 12:53:25.650" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</kw>
<msg timestamp="20230913 12:53:25.650" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.618" endtime="20230913 12:53:25.650"/>
</kw>
<status status="PASS" starttime="20230913 12:53:24.026" endtime="20230913 12:53:25.650"/>
</test>
<kw name="Teardown" library="renode-keywords" type="TEARDOWN">
<msg timestamp="20230913 12:53:25.650" level="TRACE">Arguments: [  ]</msg>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="Stop Remote Server" library="Remote">
<status status="NOT RUN" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</if>
<if>
<branch type="IF" condition="not ${SKIP_RUNNING_SERVER}">
<kw name="Wait For Process" library="Process">
<doc>Waits for the process to complete or to reach the given timeout.</doc>
<status status="NOT RUN" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</kw>
<status status="NOT RUN" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</branch>
<status status="PASS" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</if>
<msg timestamp="20230913 12:53:25.650" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20230913 12:53:25.650" endtime="20230913 12:53:25.650"/>
</kw>
<meta name="HotSpot_Action">-</meta>
<status status="PASS" starttime="20230913 12:53:23.765" endtime="20230913 12:53:25.650"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="Test Suite">Test Suite</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20230913 12:53:23.788" level="ERROR">Error in file 'C:\Users\Timofey\Documents\Projects\gcc_make\Sources\renode_test\renode_test\test.robot' on line 2: Importing library 'RenodeLibrary' failed: ModuleNotFoundError: No module named 'RenodeLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  C:\Program Files\Renode\tests
  C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0\python311.zip
  C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0\DLLs
  C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0\Lib
  C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0
  C:\Users\Timofey\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\LocalCache\local-packages\Python311\site-packages
  C:\Program Files\WindowsApps\PythonSoftwareFoundation.Python.3.11_3.11.1520.0_x64__qbz5n2kfra8p0\Lib\site-packages</msg>
</errors>
</robot>
