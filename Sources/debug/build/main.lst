ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** int i =200 ;
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END 0 */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /**
  62:Core/Src/main.c ****   * @brief  The application entry point.
  63:Core/Src/main.c ****   * @retval int
  64:Core/Src/main.c ****   */
  65:Core/Src/main.c **** int main(void)
  66:Core/Src/main.c **** {
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* USER CODE END 1 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  72:Core/Src/main.c **** 
  73:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  74:Core/Src/main.c ****   HAL_Init();
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END Init */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* Configure the system clock */
  81:Core/Src/main.c ****   SystemClock_Config();
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE END SysInit */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* Initialize all configured peripherals */
  88:Core/Src/main.c ****   MX_GPIO_Init();
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  90:Core/Src/main.c ****   /* USER CODE END 2 */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Infinite loop */
  93:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */ 
  94:Core/Src/main.c ****   while (1)
  95:Core/Src/main.c ****   {
  96:Core/Src/main.c ****     
  97:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOA, LED_Pin);
  98:Core/Src/main.c ****     HAL_Delay(i);
  99:Core/Src/main.c ****     i+=50;
 100:Core/Src/main.c ****     if(i > 5000){
 101:Core/Src/main.c ****       i = 200;
 102:Core/Src/main.c ****     }
 103:Core/Src/main.c ****     /* USER CODE END WHILE */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 106:Core/Src/main.c ****   }
 107:Core/Src/main.c ****   /* USER CODE END 3 */
 108:Core/Src/main.c **** }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c **** /**
 111:Core/Src/main.c ****   * @brief System Clock Configuration
 112:Core/Src/main.c ****   * @retval None
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c **** void SystemClock_Config(void)
 115:Core/Src/main.c **** {
 116:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 117:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 118:Core/Src/main.c **** 
 119:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 120:Core/Src/main.c ****   */
 121:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1);
 122:Core/Src/main.c **** 
 123:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 124:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 128:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 129:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 130:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 131:Core/Src/main.c ****   {
 132:Core/Src/main.c ****     Error_Handler();
 133:Core/Src/main.c ****   }
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 138:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 142:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 145:Core/Src/main.c ****   {
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 4


 146:Core/Src/main.c ****     Error_Handler();
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief GPIO Initialization Function
 152:Core/Src/main.c ****   * @param None
 153:Core/Src/main.c ****   * @retval None
 154:Core/Src/main.c ****   */
 155:Core/Src/main.c **** static void MX_GPIO_Init(void)
 156:Core/Src/main.c **** {
  28              		.loc 1 156 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 88B0     		sub	sp, sp, #32
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 40
 157:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  40              		.loc 1 157 3 view .LVU1
  41              		.loc 1 157 20 is_stmt 0 view .LVU2
  42 0004 0024     		movs	r4, #0
  43 0006 0394     		str	r4, [sp, #12]
  44 0008 0494     		str	r4, [sp, #16]
  45 000a 0594     		str	r4, [sp, #20]
  46 000c 0694     		str	r4, [sp, #24]
  47 000e 0794     		str	r4, [sp, #28]
 158:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 159:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 162:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  48              		.loc 1 162 3 is_stmt 1 view .LVU3
  49              	.LBB4:
  50              		.loc 1 162 3 view .LVU4
  51              		.loc 1 162 3 view .LVU5
  52 0010 124B     		ldr	r3, .L3
  53 0012 DA6C     		ldr	r2, [r3, #76]
  54 0014 42F00402 		orr	r2, r2, #4
  55 0018 DA64     		str	r2, [r3, #76]
  56              		.loc 1 162 3 view .LVU6
  57 001a DA6C     		ldr	r2, [r3, #76]
  58 001c 02F00402 		and	r2, r2, #4
  59 0020 0192     		str	r2, [sp, #4]
  60              		.loc 1 162 3 view .LVU7
  61 0022 019A     		ldr	r2, [sp, #4]
  62              	.LBE4:
  63              		.loc 1 162 3 view .LVU8
 163:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 163 3 view .LVU9
  65              	.LBB5:
  66              		.loc 1 163 3 view .LVU10
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 5


  67              		.loc 1 163 3 view .LVU11
  68 0024 DA6C     		ldr	r2, [r3, #76]
  69 0026 42F00102 		orr	r2, r2, #1
  70 002a DA64     		str	r2, [r3, #76]
  71              		.loc 1 163 3 view .LVU12
  72 002c DB6C     		ldr	r3, [r3, #76]
  73 002e 03F00103 		and	r3, r3, #1
  74 0032 0293     		str	r3, [sp, #8]
  75              		.loc 1 163 3 view .LVU13
  76 0034 029B     		ldr	r3, [sp, #8]
  77              	.LBE5:
  78              		.loc 1 163 3 view .LVU14
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 166:Core/Src/main.c ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
  79              		.loc 1 166 3 view .LVU15
  80 0036 2246     		mov	r2, r4
  81 0038 2021     		movs	r1, #32
  82 003a 4FF09040 		mov	r0, #1207959552
  83 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  84              	.LVL0:
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /*Configure GPIO pin : LED_Pin */
 169:Core/Src/main.c ****   GPIO_InitStruct.Pin = LED_Pin;
  85              		.loc 1 169 3 view .LVU16
  86              		.loc 1 169 23 is_stmt 0 view .LVU17
  87 0042 2023     		movs	r3, #32
  88 0044 0393     		str	r3, [sp, #12]
 170:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  89              		.loc 1 170 3 is_stmt 1 view .LVU18
  90              		.loc 1 170 24 is_stmt 0 view .LVU19
  91 0046 0123     		movs	r3, #1
  92 0048 0493     		str	r3, [sp, #16]
 171:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  93              		.loc 1 171 3 is_stmt 1 view .LVU20
  94              		.loc 1 171 24 is_stmt 0 view .LVU21
  95 004a 0594     		str	r4, [sp, #20]
 172:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  96              		.loc 1 172 3 is_stmt 1 view .LVU22
  97              		.loc 1 172 25 is_stmt 0 view .LVU23
  98 004c 0694     		str	r4, [sp, #24]
 173:Core/Src/main.c ****   HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
  99              		.loc 1 173 3 is_stmt 1 view .LVU24
 100 004e 03A9     		add	r1, sp, #12
 101 0050 4FF09040 		mov	r0, #1207959552
 102 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 103              	.LVL1:
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 176:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 177:Core/Src/main.c **** }
 104              		.loc 1 177 1 is_stmt 0 view .LVU25
 105 0058 08B0     		add	sp, sp, #32
 106              	.LCFI2:
 107              		.cfi_def_cfa_offset 8
 108              		@ sp needed
 109 005a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 6


 110              	.L4:
 111              		.align	2
 112              	.L3:
 113 005c 00100240 		.word	1073876992
 114              		.cfi_endproc
 115              	.LFE134:
 117              		.section	.text.Error_Handler,"ax",%progbits
 118              		.align	1
 119              		.global	Error_Handler
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 124              	Error_Handler:
 125              	.LFB135:
 178:Core/Src/main.c **** 
 179:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c **** /* USER CODE END 4 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c **** /**
 184:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 185:Core/Src/main.c ****   * @retval None
 186:Core/Src/main.c ****   */
 187:Core/Src/main.c **** void Error_Handler(void)
 188:Core/Src/main.c **** {
 126              		.loc 1 188 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ Volatile: function does not return.
 129              		@ args = 0, pretend = 0, frame = 0
 130              		@ frame_needed = 0, uses_anonymous_args = 0
 131              		@ link register save eliminated.
 189:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 190:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 191:Core/Src/main.c ****   __disable_irq();
 132              		.loc 1 191 3 view .LVU27
 133              	.LBB6:
 134              	.LBI6:
 135              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 7


  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 8


  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 9


 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 10


 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 136              		.loc 2 207 27 view .LVU28
 137              	.LBB7:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 138              		.loc 2 209 3 view .LVU29
 139              		.syntax unified
 140              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 141 0000 72B6     		cpsid i
 142              	@ 0 "" 2
 143              		.thumb
 144              		.syntax unified
 145              	.L6:
 146              	.LBE7:
 147              	.LBE6:
 192:Core/Src/main.c ****   while (1)
 148              		.loc 1 192 3 discriminator 1 view .LVU30
 193:Core/Src/main.c ****   {
 194:Core/Src/main.c ****   }
 149              		.loc 1 194 3 discriminator 1 view .LVU31
 192:Core/Src/main.c ****   while (1)
 150              		.loc 1 192 9 discriminator 1 view .LVU32
 151 0002 FEE7     		b	.L6
 152              		.cfi_endproc
 153              	.LFE135:
 155              		.section	.text.SystemClock_Config,"ax",%progbits
 156              		.align	1
 157              		.global	SystemClock_Config
 158              		.syntax unified
 159              		.thumb
 160              		.thumb_func
 162              	SystemClock_Config:
 163              	.LFB133:
 115:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 164              		.loc 1 115 1 view -0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 80
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 10B5     		push	{r4, lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 11


 171              		.cfi_offset 4, -8
 172              		.cfi_offset 14, -4
 173 0002 94B0     		sub	sp, sp, #80
 174              	.LCFI4:
 175              		.cfi_def_cfa_offset 88
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 176              		.loc 1 116 3 view .LVU34
 116:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 177              		.loc 1 116 22 is_stmt 0 view .LVU35
 178 0004 3822     		movs	r2, #56
 179 0006 0021     		movs	r1, #0
 180 0008 06A8     		add	r0, sp, #24
 181 000a FFF7FEFF 		bl	memset
 182              	.LVL2:
 117:Core/Src/main.c **** 
 183              		.loc 1 117 3 is_stmt 1 view .LVU36
 117:Core/Src/main.c **** 
 184              		.loc 1 117 22 is_stmt 0 view .LVU37
 185 000e 0024     		movs	r4, #0
 186 0010 0194     		str	r4, [sp, #4]
 187 0012 0294     		str	r4, [sp, #8]
 188 0014 0394     		str	r4, [sp, #12]
 189 0016 0494     		str	r4, [sp, #16]
 190 0018 0594     		str	r4, [sp, #20]
 121:Core/Src/main.c **** 
 191              		.loc 1 121 3 is_stmt 1 view .LVU38
 192 001a 4FF40070 		mov	r0, #512
 193 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 194              	.LVL3:
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 195              		.loc 1 126 3 view .LVU39
 126:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 196              		.loc 1 126 36 is_stmt 0 view .LVU40
 197 0022 0223     		movs	r3, #2
 198 0024 0693     		str	r3, [sp, #24]
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 199              		.loc 1 127 3 is_stmt 1 view .LVU41
 127:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 200              		.loc 1 127 30 is_stmt 0 view .LVU42
 201 0026 4FF48073 		mov	r3, #256
 202 002a 0993     		str	r3, [sp, #36]
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 203              		.loc 1 128 3 is_stmt 1 view .LVU43
 128:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 204              		.loc 1 128 41 is_stmt 0 view .LVU44
 205 002c 4023     		movs	r3, #64
 206 002e 0A93     		str	r3, [sp, #40]
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 207              		.loc 1 129 3 is_stmt 1 view .LVU45
 129:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 208              		.loc 1 129 34 is_stmt 0 view .LVU46
 209 0030 0D94     		str	r4, [sp, #52]
 130:Core/Src/main.c ****   {
 210              		.loc 1 130 3 is_stmt 1 view .LVU47
 130:Core/Src/main.c ****   {
 211              		.loc 1 130 7 is_stmt 0 view .LVU48
 212 0032 06A8     		add	r0, sp, #24
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 12


 213 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 214              	.LVL4:
 130:Core/Src/main.c ****   {
 215              		.loc 1 130 6 view .LVU49
 216 0038 68B9     		cbnz	r0, .L11
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 217              		.loc 1 137 3 is_stmt 1 view .LVU50
 137:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 218              		.loc 1 137 31 is_stmt 0 view .LVU51
 219 003a 0F23     		movs	r3, #15
 220 003c 0193     		str	r3, [sp, #4]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 221              		.loc 1 139 3 is_stmt 1 view .LVU52
 139:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 222              		.loc 1 139 34 is_stmt 0 view .LVU53
 223 003e 0123     		movs	r3, #1
 224 0040 0293     		str	r3, [sp, #8]
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 225              		.loc 1 140 3 is_stmt 1 view .LVU54
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 226              		.loc 1 140 35 is_stmt 0 view .LVU55
 227 0042 0021     		movs	r1, #0
 228 0044 0391     		str	r1, [sp, #12]
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 229              		.loc 1 141 3 is_stmt 1 view .LVU56
 141:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 230              		.loc 1 141 36 is_stmt 0 view .LVU57
 231 0046 0491     		str	r1, [sp, #16]
 142:Core/Src/main.c **** 
 232              		.loc 1 142 3 is_stmt 1 view .LVU58
 142:Core/Src/main.c **** 
 233              		.loc 1 142 36 is_stmt 0 view .LVU59
 234 0048 0591     		str	r1, [sp, #20]
 144:Core/Src/main.c ****   {
 235              		.loc 1 144 3 is_stmt 1 view .LVU60
 144:Core/Src/main.c ****   {
 236              		.loc 1 144 7 is_stmt 0 view .LVU61
 237 004a 01A8     		add	r0, sp, #4
 238 004c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 239              	.LVL5:
 144:Core/Src/main.c ****   {
 240              		.loc 1 144 6 view .LVU62
 241 0050 18B9     		cbnz	r0, .L12
 148:Core/Src/main.c **** 
 242              		.loc 1 148 1 view .LVU63
 243 0052 14B0     		add	sp, sp, #80
 244              	.LCFI5:
 245              		.cfi_remember_state
 246              		.cfi_def_cfa_offset 8
 247              		@ sp needed
 248 0054 10BD     		pop	{r4, pc}
 249              	.L11:
 250              	.LCFI6:
 251              		.cfi_restore_state
 132:Core/Src/main.c ****   }
 252              		.loc 1 132 5 is_stmt 1 view .LVU64
 253 0056 FFF7FEFF 		bl	Error_Handler
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 13


 254              	.LVL6:
 255              	.L12:
 146:Core/Src/main.c ****   }
 256              		.loc 1 146 5 view .LVU65
 257 005a FFF7FEFF 		bl	Error_Handler
 258              	.LVL7:
 259              		.cfi_endproc
 260              	.LFE133:
 262              		.section	.text.main,"ax",%progbits
 263              		.align	1
 264              		.global	main
 265              		.syntax unified
 266              		.thumb
 267              		.thumb_func
 269              	main:
 270              	.LFB132:
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 271              		.loc 1 66 1 view -0
 272              		.cfi_startproc
 273              		@ Volatile: function does not return.
 274              		@ args = 0, pretend = 0, frame = 0
 275              		@ frame_needed = 0, uses_anonymous_args = 0
 276 0000 08B5     		push	{r3, lr}
 277              	.LCFI7:
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 3, -8
 280              		.cfi_offset 14, -4
  74:Core/Src/main.c **** 
 281              		.loc 1 74 3 view .LVU67
 282 0002 FFF7FEFF 		bl	HAL_Init
 283              	.LVL8:
  81:Core/Src/main.c **** 
 284              		.loc 1 81 3 view .LVU68
 285 0006 FFF7FEFF 		bl	SystemClock_Config
 286              	.LVL9:
  88:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 287              		.loc 1 88 3 view .LVU69
 288 000a FFF7FEFF 		bl	MX_GPIO_Init
 289              	.LVL10:
 290 000e 01E0     		b	.L14
 291              	.L17:
 101:Core/Src/main.c ****     }
 292              		.loc 1 101 7 view .LVU70
 101:Core/Src/main.c ****     }
 293              		.loc 1 101 9 is_stmt 0 view .LVU71
 294 0010 C822     		movs	r2, #200
 295 0012 2260     		str	r2, [r4]
 296              	.L14:
  94:Core/Src/main.c ****   {
 297              		.loc 1 94 3 is_stmt 1 view .LVU72
  97:Core/Src/main.c ****     HAL_Delay(i);
 298              		.loc 1 97 5 view .LVU73
 299 0014 2021     		movs	r1, #32
 300 0016 4FF09040 		mov	r0, #1207959552
 301 001a FFF7FEFF 		bl	HAL_GPIO_TogglePin
 302              	.LVL11:
  98:Core/Src/main.c ****     i+=50;
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 14


 303              		.loc 1 98 5 view .LVU74
 304 001e 064C     		ldr	r4, .L18
 305 0020 2068     		ldr	r0, [r4]
 306 0022 FFF7FEFF 		bl	HAL_Delay
 307              	.LVL12:
  99:Core/Src/main.c ****     if(i > 5000){
 308              		.loc 1 99 5 view .LVU75
  99:Core/Src/main.c ****     if(i > 5000){
 309              		.loc 1 99 6 is_stmt 0 view .LVU76
 310 0026 2368     		ldr	r3, [r4]
 311 0028 3233     		adds	r3, r3, #50
 312 002a 2360     		str	r3, [r4]
 100:Core/Src/main.c ****       i = 200;
 313              		.loc 1 100 5 is_stmt 1 view .LVU77
 100:Core/Src/main.c ****       i = 200;
 314              		.loc 1 100 7 is_stmt 0 view .LVU78
 315 002c 41F28832 		movw	r2, #5000
 316 0030 9342     		cmp	r3, r2
 317 0032 EFDD     		ble	.L14
 318 0034 ECE7     		b	.L17
 319              	.L19:
 320 0036 00BF     		.align	2
 321              	.L18:
 322 0038 00000000 		.word	.LANCHOR0
 323              		.cfi_endproc
 324              	.LFE132:
 326              		.global	i
 327              		.section	.data.i,"aw"
 328              		.align	2
 329              		.set	.LANCHOR0,. + 0
 332              	i:
 333 0000 C8000000 		.word	200
 334              		.text
 335              	.Letext0:
 336              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 337              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 338              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 339              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 340              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 341              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 342              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 343              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 344              		.file 11 "<built-in>"
ARM GAS  C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:113    .text.MX_GPIO_Init:0000005c $d
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:118    .text.Error_Handler:00000000 $t
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:124    .text.Error_Handler:00000000 Error_Handler
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:156    .text.SystemClock_Config:00000000 $t
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:162    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:263    .text.main:00000000 $t
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:269    .text.main:00000000 main
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:322    .text.main:00000038 $d
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:332    .data.i:00000000 i
C:\Users\Tik\AppData\Local\Temp\ccLKWDPe.s:328    .data.i:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
